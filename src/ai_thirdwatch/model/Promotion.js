/**
 * Thirdwatch API
 * The first version of the Thirdwatch API is an exciting step forward towards making it easier for developers to pass data to Thirdwatch.  Once you've [registered your website/app](https://thirdwatch.ai) it's easy to start sending data to Thirdwatch.  All endpoints are only accessible via https and are located at `api.thirdwatch.ai`. For instance: you can send event at the moment by ```HTTP POST``` Request to the following URL with your API key in ```Header``` and ```JSON``` data in request body. ```   https://api.thirdwatch.ai/event/v1 ``` Every API request must contain ```API Key``` in header value ```X-THIRDWATCH-API-KEY```  Every event must contain your ```_userId``` (if this is not available, you can alternatively provide a ```_sessionId``` value also in ```_userId```).  JavaScript Fingerprinting module for capturing unique devices and tracking user interaction.  This script will identify unique devices with respect to the browser. For e.g., if chrome is opened in normal mode a unique device id is generated and this will be same if chrome is opened in incognito mode or reinstalled.  Paste the below script onto your webpage, just after the opening `<body>` tag. This script should be added to the page which is accessed externally by the user of your website. For e.g., If you want to track three different webpages then paste the below script onto each webpage, just after the opening `<body>` tag. This script should not be added onto internal tools or admin panels. ```   &lt;script id=\"thirdwatch\"     data-session-cookie-name=\"&lt;cookie_name&gt;\"     data-session-id-value=\"&lt;session_id&gt;\"     data-user-id=\"&lt;user_id&gt;\"     data-app-secret=\"&lt;app_secret&gt;\"     data-is-track-pageview=\"true\"&gt; (function() {         var loadDeviceJs = function() {         var element = document.createElement(\"script\");         element.async = 1;         element.src = \"https://cdn.thirdwatch.ai/tw.min.js\";         document.body.appendChild(element);         };         if (window.addEventListener) {              window.addEventListener(\"load\", loadDeviceJs, false);         } else if (window.attachEvent) {         window.attachEvent(\"onload\", loadDeviceJs);         }     })();   &lt;/script&gt; ``` * `data-session-cookie-name` -- The cookie name where you are saving the unique session id. We will pick the session id by reading its value from the cookie name. (Optional) * `data-session-id-value` -- In case you are not passing `data-session-cookie-name` than you can put session id directly in this parameter. In absence of both `data-session-cookie-name` and `data-session-id-value`, our system will generate a session Id. (Optional) * `data-user-id` -- Unique user id at your end. This can be email id or primary key in the database. In case of guest user, you can insert session Id here. * `data-app-secret` -- Unique App secret generated for you by Thirdwatch. * `data-is-track-pageview` -- If this is set to true, then the url on which this script is running will be sent to Thirdwatch, else the url will not be captured.   The Score API is use to get an up to date cutomer trust score after you have sent transaction event and order successful. This API will provide the riskiness score of the order with reasons. Some examples of when you may want to check the score are before:    - Before Shippement of a package   - Finalizing a money transfer   - Giving access to a prearranged vacation rental   - Sending voucher on mail  ```   https://api.thirdwatch.ai/neo/v1/score?api_key=<your api key>&order_id=<Order id> ```  According to Score you can decide to take action Approve or Reject. Orders with score more than 70 will consider as Riskey orders. We'll provide some reasons also in rules section.   ``` {   \"order_id\": \"OCT45671\",   \"user_id\": \"ajay_245\",   \"order_timestamp\": \"2017-05-09T09:40:45.717Z\",   \"score\": 82,   \"flag\": \"red\",     -\"reasons\": [     {         \"name\": \"_numOfFailedTransactions\",         \"display_name\": \"Number of failed transactions\",         \"flag\": \"green\",         \"value\": \"0\",         \"is_display\": true       },       {         \"name\": \"_accountAge\",         \"display_name\": \"Account age\",         \"flag\": \"red\",         \"value\": \"0\",         \"is_display\": true       },       {         \"name\": \"_numOfOrderSameIp\",         \"display_name\": \"Number of orders from same IP\",         \"flag\": \"red\",         \"value\": \"11\",         \"is_display\": true       }     ] } ``` 
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ai_thirdwatch/ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.thirdwatch_api) {
      root.thirdwatch_api = {};
    }
    root.thirdwatch_api.Promotion = factory(root.thirdwatch_api.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Promotion model module.
   * @module ai_thirdwatch/model/Promotion
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>Promotion</code>.
   * The Promotion field type generically models different kinds of promotions such as referrals, coupons, free trials, etc. The value must be a nested JSON object which you populate with the appropriate information to describe the promotion. Not all sub-fields will likely apply to a given promotion. Populate only those that apply.  A promotion can be added when creating or updating an account, creating or updating an order, or on its own using the add_promotion event. The promotion object supports both monetary (e.g. 500 coupon on first order) and non-monetary (e.g. \&quot;100 in points to refer a friend\&quot;). 
   * @alias module:ai_thirdwatch/model/Promotion
   * @class
   */
  var exports = function() {
    var _this = this;











  };

  /**
   * Constructs a <code>Promotion</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:ai_thirdwatch/model/Promotion} obj Optional instance to populate.
   * @return {module:ai_thirdwatch/model/Promotion} The populated <code>Promotion</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('_promotionId')) {
        obj['_promotionId'] = ApiClient.convertToType(data['_promotionId'], 'String');
      }
      if (data.hasOwnProperty('_status')) {
        obj['_status'] = ApiClient.convertToType(data['_status'], 'String');
      }
      if (data.hasOwnProperty('_description')) {
        obj['_description'] = ApiClient.convertToType(data['_description'], 'String');
      }
      if (data.hasOwnProperty('_amount')) {
        obj['_amount'] = ApiClient.convertToType(data['_amount'], 'String');
      }
      if (data.hasOwnProperty('_minPurchaseAmount')) {
        obj['_minPurchaseAmount'] = ApiClient.convertToType(data['_minPurchaseAmount'], 'String');
      }
      if (data.hasOwnProperty('_referrerUserId')) {
        obj['_referrerUserId'] = ApiClient.convertToType(data['_referrerUserId'], 'String');
      }
      if (data.hasOwnProperty('_failureReason')) {
        obj['_failureReason'] = ApiClient.convertToType(data['_failureReason'], 'String');
      }
      if (data.hasOwnProperty('_percentageOff')) {
        obj['_percentageOff'] = ApiClient.convertToType(data['_percentageOff'], 'String');
      }
      if (data.hasOwnProperty('_currencyCode')) {
        obj['_currencyCode'] = ApiClient.convertToType(data['_currencyCode'], 'String');
      }
      if (data.hasOwnProperty('_type')) {
        obj['_type'] = ApiClient.convertToType(data['_type'], 'String');
      }
    }
    return obj;
  }

  /**
   * The ID/Coupon Code within your system that you use to represent this promotion. This ID is ideally unique to the promotion across users (e.g. \"Welcome\").
   * @member {String} _promotionId
   */
  exports.prototype['_promotionId'] = undefined;
  /**
   * The status of the addition of promotion to an account. Best used with the add_promotion event. This way you can pass to Thirdwatch both successful and failed attempts when using a promotion. May be useful in spotting potential abuse. e.g. _success, _Failed
   * @member {String} _status
   */
  exports.prototype['_status'] = undefined;
  /**
   * Describe promotion here.
   * @member {String} _description
   */
  exports.prototype['_description'] = undefined;
  /**
   * The amount or credits the promotion is worth.
   * @member {String} _amount
   */
  exports.prototype['_amount'] = undefined;
  /**
   * The minimum amount someone must spend in order for the promotion to be applied.
   * @member {String} _minPurchaseAmount
   */
  exports.prototype['_minPurchaseAmount'] = undefined;
  /**
   * The unique user ID of the user who referred the user to this promotion.
   * @member {String} _referrerUserId
   */
  exports.prototype['_referrerUserId'] = undefined;
  /**
   * When adding a promotion fails, use this to describe why it failed.e.g. _alreadyUsed, _invalidCode, _notApplicable, _expired
   * @member {String} _failureReason
   */
  exports.prototype['_failureReason'] = undefined;
  /**
   * The percentage discount. If the discount is 10% off, you would send \"10\".
   * @member {String} _percentageOff
   */
  exports.prototype['_percentageOff'] = undefined;
  /**
   * The [ISO-4217](http://en.wikipedia.org/wiki/ISO_4217) currency code for the amount. e.g., USD, INR alternative currencies, like bitcoin or points systems.
   * @member {String} _currencyCode
   */
  exports.prototype['_currencyCode'] = undefined;
  /**
   * Type of the promotion e.g., First Time, Refer, Diwali
   * @member {String} _type
   */
  exports.prototype['_type'] = undefined;



  return exports;
}));


